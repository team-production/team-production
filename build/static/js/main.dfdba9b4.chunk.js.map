{"version":3,"sources":["team_project/homgPage/index.jsx","team_project/htmlPage/index.jsx","team_project/jQueryPage/index.jsx","team_project/jsPage/index.jsx","team_project/reactPage/index.jsx","team_project/vuePage/index.jsx","team_project/uIPage/index.jsx","team_project/cssPage/index.jsx","team_project/typeScript/index.jsx","team_project/layout/index.jsx","team_project/index.jsx","serviceWorker.js","index.js"],"names":["Component","Panel","Collapse","text1","style","fontSize","fontWeight","text2","Index","width","margin","bordered","defaultActiveKey","header","key","React","JqueryPage","text3","text","paddingLeft","shuReact","height","textAlign","TabPane","Tabs","operations","disabled","index","className","tabBarExtraContent","tab","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfdba9b4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return <div>home</div>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\nconst { Panel } = Collapse;\r\nconst text1 = (\r\n  <ul>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>1.基本知识</p>\r\n      <p>\r\n        HTML 指的是超文本标记语言: HyperText Markup Language\r\n        <br />\r\n        HTML 标记标签通常被称为 HTML 标签 (HTML tag)\r\n        <br />\r\n        HTML 元素包含了开始标签与结束标签，元素的内容是开始标签与结束标签之间的内容，元素属性是 HTML 元素提供的附加信息。\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>2.  数组方法</p>\r\n      concat() 连接两个或更多的数组，并返回结果。<br />\r\n      copyWithin() 从数组的指定位置拷贝元素到数组的另一个指定位置中。 <br />\r\n      entries()返回数组的可迭代对象。 <br />\r\n      every() 检测数值元素的每个元素是否都符合条件。<br />\r\n      fill() 使用一个固定值来填充数组。 <br />\r\n      filter()检测数值元素，并返回符合条件所有元素的数组。 <br />\r\n      find()返回符合传入测试（函数）条件的数组元素。 <br />\r\n      findIndex()返回符合传入测试（函数）条件的数组元素索引。 <br />\r\n      forEach()数组每个元素都执行一次回调函数。 <br />\r\n      from() 通过给定的对象中创建一个数组。<br />\r\n      includes() 判断一个数组是否包含一个指定的值。 <br />\r\n      indexOf()搜索数组中的元素，并返回它所在的位置。 <br />\r\n      isArray() 判断对象是否为数组。<br />\r\n      join() 把数组的所有元素放入一个字符串。<br />\r\n      keys()返回数组的可迭代对象，包含原始数组的键(key)。<br />\r\n      lastIndexOf()返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索。<br />\r\n      map() 通过指定函数处理数组的每个元素，并返回处理后的数组。<br />\r\n      pop()删除数组的最后一个元素并返回删除的元素。 <br />\r\n      push()向数组的末尾添加一个或更多元素，并返回新的长度。<br />\r\n      reduce()[rɪˈdu:s]将数组元素计算为一个值（从左到右）。 <br />\r\n      reduceRight()将数组元素计算为一个值（从右到左）。<br />\r\n      reverse() 反转数组的元素顺序。<br />\r\n      shift() 删除并返回数组的第一个元素。 <br />\r\n      slice()选取数组的的一部分，并返回一个新数组。<br />\r\n      some()[sʌm]检测数组元素中是否有元素符合指定条件。<br />\r\n      sort() 对数组的元素进行排序。<br />\r\n      splice() 从数组中添加或删除元素。<br />\r\n      toString()把数组转换为字符串，并返回结果。<br />\r\n      unshift()向数组的开头添加一个或更多元素，并返回新的长度。<br />\r\n      valueOf()返回数组对象的原始值。<br />\r\n    </li>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>3. \tMath 对象方法</p>\r\n      abs(x)\t返回 x 的绝对值。<br />\r\n      acos(x)\t返回 x 的反余弦值。<br />\r\n      asin(x)\t返回 x 的反正弦值。<br />\r\n      atan(x)\t以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。<br />\r\n      atan2(y,x)\t返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。<br />\r\n      ceil(x)\t对数进行上舍入。<br />\r\n      cos(x)\t返回数的余弦。<br />\r\n      exp(x)\t返回 Ex 的指数。<br />\r\n      floor(x)\t对 x 进行下舍入。<br />\r\n      log(x)\t返回数的自然对数（底为e）。<br />\r\n      max(x,y,z,...,n)\t返回 x,y,z,...,n 中的最高值。<br />\r\n      min(x,y,z,...,n)\t返回 x,y,z,...,n中的最低值。<br />\r\n      pow(x,y)\t返回 x 的 y 次幂。<br />\r\n      random()\t返回 0 ~ 1 之间的随机数。<br />\r\n      round(x)\t四舍五入。<br />\r\n      sin(x)\t返回数的正弦。<br />\r\n      sqrt(x)\t返回数的平方根。<br />\r\n      tan(x)\t返回角的正切。<br />\r\n      abs(x)\t返回 x 的绝对值。<br />\r\n      acos(x)\t返回 x 的反余弦值。<br />\r\n      asin(x)\t返回 x 的反正弦值。<br />\r\n      atan(x)\t以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。<br />\r\n      atan2(y,x)\t返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。<br />\r\n      ceil(x)\t对数进行上舍入。<br />\r\n      cos(x)\t返回数的余弦。<br />\r\n      exp(x)\t返回 Ex 的指数。<br />\r\n      floor(x)\t对 x 进行下舍入。<br />\r\n      log(x)\t返回数的自然对数（底为e）。<br />\r\n      max(x,y,z,...,n)\t返回 x,y,z,...,n 中的最高值。<br />\r\n      min(x,y,z,...,n)\t返回 x,y,z,...,n中的最低值。<br />\r\n      pow(x,y)\t返回 x 的 y 次幂。<br />\r\n      random()\t返回 0 ~ 1 之间的随机数。<br />\r\n      round(x)\t四舍五入。<br />\r\n      sin(x)\t返回数的正弦。<br />\r\n      sqrt(x)\t返回数的平方根。<br />\r\n      tan(x)\t返回角的正切。<br />\r\n\r\n    </li>\r\n  </ul>\r\n);\r\nconst text2 = (\r\n  <ul>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>1.BOM: Browser Object Model</p>\r\n      什么是: 专门操作浏览器窗口的API\r\n  没有标准, 导致浏览器兼容性问题\r\n  包括:\r\n  window\r\n  history\r\n  location\r\n  navigator\r\n  dom\r\n  event\r\n  screen\r\n    </li>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>2.window:</p>\r\n      属性: .innerWidth, .innerHeight 浏览器窗口中，文档显示区的宽和高<br />\r\n      方法: .open() .close() .open(\"url\",\"name\")<br />\r\n      三种:<br />\r\n      1.在当前窗口打开，可后退: .open(\"url\",\"_self\")<br />\r\n      2.在新窗口打开，可打开多个: .open(\"url\",\"_blank\")<br />\r\n      3.在新窗口打开，只能打开一个:.open(\"url\",\"自定义窗口名\")<br />\r\n    </li>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>3.history: 保存当前窗口打开后，成功访问过的url的历史记录栈</p>\r\n      在当前窗口中，每访问一个新url，都会将新url压入historyAPI: history.go(n)<br />\r\n      3种:<br />\r\n      前进: history.go(1)  <br />\r\n      后退: history.go(-1)  <br />\r\n      刷新: history.go(0)<br />\r\n    </li>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>4.location: 保存当前窗口正在打开的url的对象</p>\r\n      属性: <br />\r\n      .href 完整url地址<br />\r\n      .protocol 协议<br />\r\n      .host 主机名+端口号<br />\r\n      .hostname 主机名<br />\r\n      .port 端口号<br />\r\n      .pathname 相对路径<br />\r\n      .hash #锚点地址<br />\r\n      .search ?查询字符串<br />\r\n      方法:<br />\r\n      在当前窗口打开，可后退:\r\nlocation.assign(url) => location.href=url => location=url<br />\r\n      在当前窗口打开，禁止后退:\r\nlocation.replace(url)<br />\r\n      重新加载页面: 刷新: 2种:\r\n      普通刷新:\r\n      优先从浏览器本地缓冲获取资源:\r\n      F5\r\n      history.go(0)\r\n      location.reload(/false/)\r\n      强制刷新:\r\n      无论本地是否有缓存，总是强制从服务器获取资源\r\n      location.reload(true)\r\n    </li>\r\n    <li>\r\n      <p style={{ fontSize: \"20px\", fontWeight: '700' }}>5.定时器: 2种:</p>\r\n      周期性定时器:<br />\r\n      什么是: 让程序每隔指定的时间间隔，反复执行一项任务\r\n何时: 只要让程序按照指定的时间间隔，自动执行一项任务<br />\r\n      如何: 3件事:<br />\r\n      1.任务函数: 让定时器反复执行的任务<br />\r\n      2.启动定时器: timer=setInterval(task, interval)让程序，每隔interval 毫秒自动执行一次task任务<br />\r\n      3.停止定时器: clearInterval(timer)<br />\r\n      timer: 定时器的序号, 在内存中唯一标识定时器的整数专门用于停止定时器<br />\r\n      如何获得: 只能在启动定时器时获得。\r\n      何时: 只要一个定时器可能被停止，就要在启动时，先保存定时器序号\r\n      好的习惯: 在clearInterval之后，手动清除timer中残留的序号: timer=null;\r\n停止定时器: 2种情况:<br />\r\n      用户手动停止:<br />\r\n      定时器可自动停止: <br />\r\n      在任务函数中，设定临界值，如果没有达到临界值，则继续执行任务，否则，如果达到临界值，就自动调用clearInterval<br />\r\n      2.一次性定时器: <br />\r\n      什么是: 让程序先等待一段时间，再执行一次任务。执行后，自动停止。\r\n      何时: 只要让程序延迟执行一件事时\r\n      如何: 3件事:\r\n1.task<br />\r\n      2.启动定时器: timer=setTimeout(task,wait)\r\n让程序等待wait毫秒后，自动执行一次task，执行后自动停止<br />\r\n      3.停止定时器: clearTimeout(timer)<br />\r\n    </li>\r\n  </ul>\r\n);\r\nexport default class Index extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"1000px\", margin: \"auto\", fontSize: '25px', fontWeight: '700' }}>\r\n        <Collapse bordered={false} defaultActiveKey={[\"1\"]}>\r\n          <Panel header=\"HTML基础知识点总结\" key=\"1\">\r\n            {text1}\r\n          </Panel>\r\n          <Panel header=\"CSS3基本知识点总结\" key=\"2\">\r\n            {text2}\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class JqueryPage extends Component {\r\n  render() {\r\n    return <div>JqueryPage</div>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\nconst { Panel } = Collapse;\r\nconst text1 = (\r\n  <ul>\r\n    <li>\r\n      <p style={{fontSize:\"20px\",fontWeight:'700'}}>1. JavaScript 数据类型</p>\r\n      <p>\r\n        基本数据类型：字符串（String）、数字(Number)、布尔(Boolean\r\n        [ˈbuliən])、对空（Null）、未定义（Undefined）、Symbol [ˈsɪmbəl]。\r\n        <br />\r\n        引用数据类型：对象(Object)、数组(Array)、函数(Function)。\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p style={{fontSize:\"20px\",fontWeight:'700'}}>2.  数组方法</p>\r\n      concat() 连接两个或更多的数组，并返回结果。<br/>\r\n      copyWithin() 从数组的指定位置拷贝元素到数组的另一个指定位置中。 <br/>\r\n      entries()返回数组的可迭代对象。 <br/>\r\n      every() 检测数值元素的每个元素是否都符合条件。<br/>\r\n      fill() 使用一个固定值来填充数组。 <br/>\r\n      filter()检测数值元素，并返回符合条件所有元素的数组。 <br/>\r\n      find()返回符合传入测试（函数）条件的数组元素。 <br/>\r\n      findIndex()返回符合传入测试（函数）条件的数组元素索引。 <br/>\r\n      forEach()数组每个元素都执行一次回调函数。 <br/>\r\n      from() 通过给定的对象中创建一个数组。<br/>\r\n      includes() 判断一个数组是否包含一个指定的值。 <br/>\r\n      indexOf()搜索数组中的元素，并返回它所在的位置。 <br/>\r\n      isArray() 判断对象是否为数组。<br/>\r\n      join() 把数组的所有元素放入一个字符串。<br/> \r\n      keys()返回数组的可迭代对象，包含原始数组的键(key)。<br/> \r\n      lastIndexOf()返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索。<br/>\r\n      map() 通过指定函数处理数组的每个元素，并返回处理后的数组。<br/> \r\n      pop()删除数组的最后一个元素并返回删除的元素。 <br/>\r\n      push()向数组的末尾添加一个或更多元素，并返回新的长度。<br/>\r\n      reduce()[rɪˈdu:s]将数组元素计算为一个值（从左到右）。 <br/>\r\n      reduceRight()将数组元素计算为一个值（从右到左）。<br/>\r\n      reverse() 反转数组的元素顺序。<br/>\r\n      shift() 删除并返回数组的第一个元素。 <br/>\r\n      slice()选取数组的的一部分，并返回一个新数组。<br/>\r\n      some()[sʌm]检测数组元素中是否有元素符合指定条件。<br/> \r\n      sort() 对数组的元素进行排序。<br/>\r\n      splice() 从数组中添加或删除元素。<br/>\r\n      toString()把数组转换为字符串，并返回结果。<br/>\r\n      unshift()向数组的开头添加一个或更多元素，并返回新的长度。<br/> \r\n      valueOf()返回数组对象的原始值。<br/>\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>3. \tMath 对象方法</p>\r\nabs(x)\t返回 x 的绝对值。<br/>\r\nacos(x)\t返回 x 的反余弦值。<br/>\r\nasin(x)\t返回 x 的反正弦值。<br/>\r\natan(x)\t以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。<br/>\r\natan2(y,x)\t返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。<br/>\r\nceil(x)\t对数进行上舍入。<br/>\r\ncos(x)\t返回数的余弦。<br/>\r\nexp(x)\t返回 Ex 的指数。<br/>\r\nfloor(x)\t对 x 进行下舍入。<br/>\r\nlog(x)\t返回数的自然对数（底为e）。<br/>\r\nmax(x,y,z,...,n)\t返回 x,y,z,...,n 中的最高值。<br/>\r\nmin(x,y,z,...,n)\t返回 x,y,z,...,n中的最低值。<br/>\r\npow(x,y)\t返回 x 的 y 次幂。<br/>\r\nrandom()\t返回 0 ~ 1 之间的随机数。<br/>\r\nround(x)\t四舍五入。<br/>\r\nsin(x)\t返回数的正弦。<br/>\r\nsqrt(x)\t返回数的平方根。<br/>\r\ntan(x)\t返回角的正切。<br/>\r\nabs(x)\t返回 x 的绝对值。<br/>\r\nacos(x)\t返回 x 的反余弦值。<br/>\r\nasin(x)\t返回 x 的反正弦值。<br/>\r\natan(x)\t以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。<br/>\r\natan2(y,x)\t返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。<br/>\r\nceil(x)\t对数进行上舍入。<br/>\r\ncos(x)\t返回数的余弦。<br/>\r\nexp(x)\t返回 Ex 的指数。<br/>\r\nfloor(x)\t对 x 进行下舍入。<br/>\r\nlog(x)\t返回数的自然对数（底为e）。<br/>\r\nmax(x,y,z,...,n)\t返回 x,y,z,...,n 中的最高值。<br/>\r\nmin(x,y,z,...,n)\t返回 x,y,z,...,n中的最低值。<br/>\r\npow(x,y)\t返回 x 的 y 次幂。<br/>\r\nrandom()\t返回 0 ~ 1 之间的随机数。<br/>\r\nround(x)\t四舍五入。<br/>\r\nsin(x)\t返回数的正弦。<br/>\r\nsqrt(x)\t返回数的平方根。<br/>\r\ntan(x)\t返回角的正切。<br/>\r\n\r\n    </li>\r\n  </ul>\r\n);\r\nconst text2 = (\r\n  <ul>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>1.BOM: Browser Object Model</p>\r\n    什么是: 专门操作浏览器窗口的API\r\n没有标准, 导致浏览器兼容性问题\r\n包括: \r\nwindow \r\nhistory\r\nlocation\r\nnavigator\r\ndom\r\nevent\r\nscreen\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>2.window:</p>\r\n    属性: .innerWidth, .innerHeight 浏览器窗口中，文档显示区的宽和高<br/>\r\n方法: .open() .close() .open(\"url\",\"name\")<br/>\r\n三种:<br/>\r\n    1.在当前窗口打开，可后退: .open(\"url\",\"_self\")<br/>\r\n    2.在新窗口打开，可打开多个: .open(\"url\",\"_blank\")<br/>\r\n    3.在新窗口打开，只能打开一个:.open(\"url\",\"自定义窗口名\")<br/>\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>3.history: 保存当前窗口打开后，成功访问过的url的历史记录栈</p>\r\n    在当前窗口中，每访问一个新url，都会将新url压入historyAPI: history.go(n)<br/>\r\n3种:<br/>\r\n 前进: history.go(1)  <br/>\r\n 后退: history.go(-1)  <br/>\r\n 刷新: history.go(0)<br/>\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>4.location: 保存当前窗口正在打开的url的对象</p>\r\n    属性: <br/>\r\n.href 完整url地址<br/>\r\n.protocol 协议<br/>\r\n.host 主机名+端口号<br/>\r\n.hostname 主机名<br/>\r\n.port 端口号<br/>\r\n.pathname 相对路径<br/>\r\n.hash #锚点地址<br/>\r\n.search ?查询字符串<br/>\r\n方法:<br/>\r\n在当前窗口打开，可后退:\r\nlocation.assign(url) => location.href=url => location=url<br/>\r\n在当前窗口打开，禁止后退:\r\nlocation.replace(url)<br/>\r\n重新加载页面: 刷新: 2种:\r\n普通刷新:\r\n优先从浏览器本地缓冲获取资源:\r\nF5\r\nhistory.go(0)\r\nlocation.reload(/false/)\r\n强制刷新:\r\n无论本地是否有缓存，总是强制从服务器获取资源\r\nlocation.reload(true)\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>5.定时器: 2种:</p>\r\n    周期性定时器:<br/>\r\n什么是: 让程序每隔指定的时间间隔，反复执行一项任务\r\n何时: 只要让程序按照指定的时间间隔，自动执行一项任务<br/>\r\n如何: 3件事:<br/>\r\n1.任务函数: 让定时器反复执行的任务<br/>\r\n2.启动定时器: timer=setInterval(task, interval)让程序，每隔interval 毫秒自动执行一次task任务<br/>\r\n3.停止定时器: clearInterval(timer)<br/>\r\ntimer: 定时器的序号, 在内存中唯一标识定时器的整数专门用于停止定时器<br/>\r\n 如何获得: 只能在启动定时器时获得。\r\n 何时: 只要一个定时器可能被停止，就要在启动时，先保存定时器序号\r\n 好的习惯: 在clearInterval之后，手动清除timer中残留的序号: timer=null;\r\n停止定时器: 2种情况:<br/>\r\n用户手动停止:<br/>\r\n定时器可自动停止: <br/>\r\n在任务函数中，设定临界值，如果没有达到临界值，则继续执行任务，否则，如果达到临界值，就自动调用clearInterval<br/>\r\n2.一次性定时器: <br/>\r\n什么是: 让程序先等待一段时间，再执行一次任务。执行后，自动停止。\r\n何时: 只要让程序延迟执行一件事时\r\n如何: 3件事:\r\n1.task<br/>\r\n2.启动定时器: timer=setTimeout(task,wait)\r\n让程序等待wait毫秒后，自动执行一次task，执行后自动停止<br/>\r\n3.停止定时器: clearTimeout(timer)<br/>\r\n    </li>\r\n  </ul>\r\n);\r\nconst text3 = (\r\n  <ul>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>1.原型和原型链</p>\r\n    原型（prototype）\r\n我们创建的每个函数都有一个prototype（原型）属性，这个属性是一个指针，指向一个对象，就是函数的原型对象。<br/>\r\n    原型链\r\n每个函数在创建的时候都会有一个prototype属性，该属性指向一个对象，用于存放可以被有所属函数创建出来的所有实例共用的属性和方法。<br/>\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>2.闭包</p>\r\n    闭包定义:<br/>\r\n闭包是指有权限访问另一个函数作用域中的变量的函数。\r\n内部函数可以访问外部函数的变量，由于函数执行时会创建作用域链，当前函数的活动对象处于最前端，当访问变量时如果当前函数的活动对象内没有则会查找作用域链的下一个也就是外层函数的变量对象，依次向上直到找到或者查找完全局对象仍没有则报错，然而外部函数却无法访问内部函数的变量。\r\n然而闭包的特点就是访问其他函数内的变量。当函数执行结束后其执行环境、变量对象都会销毁，但是当其内的变量被其他函数引用访问时，即使执行环境销毁，作用域链断开，但是变量对象依然存在，供引用了其内变量的函数去访问。<br/>\r\n    闭包优缺点:<br/>优点：1.实现共有变量<br/>2.可以做缓存<br/>3.实现封装属性私有化<br/>4.模块儿化开发，<br/>5.防止污染全局变量<br/>\r\n缺点：内存泄漏 \r\n\r\n    </li>\r\n    <li>\r\n    <p style={{fontSize:\"20px\",fontWeight:'700'}}>3.DOM节点</p>\r\n    获取dom节点的6种方法？<br/>\r\n1.\tdocument.getElementById();<br/>\r\n2.\tdocument.getElementsByTagName();<br/>\r\n3.\tdocument.getElementsByClassName();<br/>\r\n4.\tdocument.getElementsByName();<br/>\r\n5.\tdocument.querySelector();<br/>\r\n6.\tdocument.querySelectorAll()；<br/>\r\n遍历节点数：<br/>\r\n1.div.parentNode  获取父级节点 <br/>\r\n2.div.childNodes  获取div的子级节点们(*)<br/>\r\n         1.元素节点  <br/>\r\n          2.属性节点  <br/>\r\n          3.文本节点  <br/>\r\n          4.注释节点  <br/>\r\n          5.document  <br/>\r\n          6.DocumentFragment(文本碎片节点) <br/>\r\n3.lastChild() 获取在最后一个子级节点<br/>\r\n4.firstChild()  获取第一个子级节点 <br/>\r\n5.div.previousSibling() 获取前一个兄弟节点<br/>\r\n6.div.nextSibling() 获取后一个兄弟节点<br/>\r\n    </li>\r\n    <li>\r\n        <p style={{fontSize:\"20px\",fontWeight:'700'}}>4.\tJS对象、构造器函数和原型对象之间的关系</p>\r\n    \t对象：属性和方法的集合，即变量和函数的封装。每个对象都有一个__proto__属性，指向这个对象的构造函数的原型对象。\r\n        构造函数：用于创建对象的函数（通过new关键字生成对象），函数名一般首字母大写的。有一个prototype属性，它指向原型对象。\r\n        原型对象：拥有constructor（构造函数）属性，这个属性指向constructor对象，其实就是function函数本身（在这里也就是指向构造函数）。</li>\r\n  </ul>\r\n);\r\nexport default class Index extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"1000px\", margin: \"auto\",fontSize:'25px',fontWeight:'700' }}>\r\n        <Collapse bordered={false} defaultActiveKey={[\"1\"]}>\r\n          <Panel header=\"JS初级\" key=\"1\">\r\n            {text1}\r\n          </Panel>\r\n          <Panel header=\"JS中级\" key=\"2\">\r\n            {text2}\r\n          </Panel>\r\n          <Panel header=\"JS 高级\" key=\"3\">\r\n            {text3}\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\n\n//antUI库\nimport { Collapse } from 'antd';\nconst { Panel } = Collapse;\nconst text = (\n\t<ul style={{ paddingLeft: 24 }}>\n\t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 一、创建 react 项目的 2 种方式\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、npx create-react-app '项目名称'</li>\n\t\t <li>2、全局安装 creat-react-app</li>\n\t\t <li>3、npm install create-react-app -g</li>\n\t\t <li>4、create-react-app '项目名称'</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二、react 主要包含 2 个包 react  react-dom\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、document.createTextNode() 创建文本节点</li>\n\t\t <li>2、jsx 语法 默认会使用大写 React 这个变量 � 因为 jsx 语法会自动调用 React.creatElenment 这个方法</li>\n\t\t <li>3、用对象来描述元素叫做虚拟 dom creatElement 方法返回的是一个 react 元素/虚拟 dom(对象)</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 三、jsx 语法以及 jsx 写法特点\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、jsx js + xml(html) jsx 写 js 使用{} 表示 html标签</li>\n\t\t <li>2、class => className class 关键字</li>\n\t\t <li>3、label for => htmlFor</li>\n\t\t <li>4、style => 对象形式</li>\n\t\t <ul>\n\t\t\t style 写法示例 第一个大括号 表示js 第二个大括号�表示对象\n\t\t\t <li>1、innerHtml => dangerouslySetInnerHTML v-html xss 攻击 可以信赖的内容</li>\n\t\t\t <li>2、{} 取值放 js 代码 必须要有返回值</li>\n\t\t\t <li>3、事件 事件名 on 大写开头的名字 后面跟的是方法 驼峰命名</li>\n\t\t\t <li>4、jsx语法里面写注释只能采用 {}</li>\n\t\t\t <li>5、jsx元素只能有一个根元素，当不想有父元素生成的时候，可以用空标签进行包裹</li>\n\t\t\t <li>6、react render方法可以渲染数组</li>\n\t\t </ul>\n\t </ul>\n\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 四、传承的 dom 事件操作 \n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t  <li>1、优点：直观 ，书写习惯，渲染快，利于 SEO</li>\n\t\t <li>2、缺点：可复用性差 扩展困难 ，维护成本高，耦合度高\n</li>\n\t\t <li>3、适用于： 传统的静态网站，宣传页。参与开发人员少。</li>\n\t\t \n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 五、组件(模块)化开发\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t<li>1、优点： 复用性强，高内聚低耦合，命名空间，便于扩展和优化，维护方便，易于阅读</li>\n\t\t <li>2、缺点：初期开发速度慢，对开发人员的逻辑能力要求高，需要借助自动化工具加工(node.js、webpack、babel),不利于 SEO。</li>\n\t\t <li>4、适用于：团队开发，应用和程序项目，中大型项目。</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 六、react 的核心是组件\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>组件的设计目的是提高代码的可复用率降低了测试难度和代码复杂度</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 七、安装 cnpm 步骤\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <p>npm 下的淘宝镜像</p>\n\t\t <li>1、 npm config set registry https://registry.npm taobao.org</li>\n\t\t <li>2、npm config get registry\n</li>\n\t\t <li>3、npm install -g cnpm --registry=https://registry.npm.taobao.org</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 八、脚手架安装\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <p>创建项目</p>\n\t\t <li>1、全局安装：npm install -g create-react-app</li>\n\t\t <li>2、初始项目：create-react-app 项目名称: reactapp201909</li>\n\t\t <li>3、启动项目：npm start</li>\n\t\t <li>4、npm run eject:重新生成依赖和配置文件</li>\n\t\t <li>5*npm run start :运行本地开发环境 *npm run build :打包项目 *npm run test：运行测试环境</li>\n\t\t <li>6、npm run eject: - 重新生成依赖和配置文件 - 本地项目里的依赖和全局依赖包版本不一致导致的 bug,可以使用此命令解决。</li>\n\t\t<li>7、注意： 如果项目初始化的时候就是在 git 仓库里的，那么我们在使用此命令的时候会失败\n控制台会提示我们应该先存储代码到本地 git 仓库</li>\n        <li>8、解决办法：要么删掉 git 本地仓库，要么提交 git 仓库，才能正常使用此命令</li>\n\t\t<li>9、说明:\n- 使用脚手架初识的项目，默认是隐藏配置文件和一些依赖的，其目的是为了减少空间占用，\n  让项目结构更简单，但是有时候我们需要在配置文件里修改，那么就使用 eject 命令</li>\n\t </ul>\n\t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 九、引入步骤\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、引入 react 依赖 包</li>\n\t\t <li>2、创建无状态组件</li>\n\t\t <li>3、在 react 中，所有的 dom 元素都是 js 生成的虚拟 dom,在 js 中 class 是保留关键字，所以我们在使用如 class 类型的时候需要遵守 react 定义的 className。</li>\n\t\t <li>4、除了 class 类名，还有 label 标签上的 for 属性，需要用 forHtml 表示。</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十、在 react 中标签的嵌套严格遵照 w3c 标准，比如：p 标签不可以嵌套 div 或者其他块级元素\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、props:在 react 里叫属性，父组件传递给子组件上所有的属性都会在 props 里那到</li>\n\t\t <li>2、 props 类型是对象</li>\n\t\t <li>3、在 props 里默认是没有 children 的，只有当该组件被调用的时候且插入了一些子组件的时候，才会在 props 里有一个 children.它的类型是数组</li>\n\t\t <li>4、 props.children：类型是数组，如果单纯的调用它，叫做隐式渲染</li>\n\t\t <li>5、我们可以使用使用 react 提供的方法对 children 里的每一项做处理，这样的使用我们叫做显示渲染\n</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十一、顶级 API 概念：凡是挂载在 React 和 ReactDOM 下面的 api 都是顶级的\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、比如：createElement、cloneElement、Children</li>\n\t\t <li>2、在 react 发展中.往往有三个 api 是配合使用的.它们就是： - React.Children + React.cloneElement + props.Children - 顶级 API 概念是指可以在全局可以使用的方法 ###顶级 api:React.Children 它的作用是处理组件里的 children 的，它下面有很多方法，我们常用的就是 map 遍历</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十二、顶级 api:React.cloneElement \n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>它的作用是克隆组件里 children 的每一项子元素，并返回一个新的 react 元素，该方法有三个参数和 createElement 几乎一致：1.元素 2.属性 3.内容或者子元素</li>\n\t </ul>\n\t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十三、开发步骤\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、纯粹的静态页面</li>\n\t\t <li>2、结构布局:\n   \t\t\t2.1 头部：logo、\n\t\t</li>\n\t\t <li>3、接口封装使用 ajax</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十四、class 组件：\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、 定义：容器组件、功能组件\n  详解：class 关键字声明、组件名称、extends 继承谁、React.Component 基础类</li>\n\t\t <li>2、 说明：\n  在 class 里的继承，必须是 class，只有 class 才能继承 class</li>\n\t\t <li>3、在 class 组件中，dom 元素必须是在 render 方法中的，和无状态组件有直接区别</li>\n\t\t <li>4、render:渲染\n   \n  //一个函数执行之后想要获取它内部的东西必须运用 进行返回</li>\n\t\t <li>5、React.Fragment 是一个占位组件，作用是:在 react 定义中，所有组件都必须在一个根组件中，在我们不想拥有多层父级的时候，使用 React.Fragment 做占位符既可以解决根组件的问题，又保证页面上不会出现多余的 dom 元素。</li>\n\t\t <li>6、React.Fragment 不会生成任何 dom 元素，并且有根容器的特性</li>\n\t\t <li>7、注意：在 dom 元素内的{} 不是单纯意思的对象，它表示 js 表达式，及 js 执行环境，\n    只有在 dom 内写注释，或者运行 js 的时候才需要用到{}\n</li>\n\t\t <li>8、自定义属性：\n    我们在 dom 元素上自定义的属性，必须是全小写，只有 react 内置的如 className 是驼峰的以及 forHtml</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十五、React 组件三种写法：\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、funcion 无状态组件，只接受一个 propsli></li>\n\t\t <li>2、class es6 的写法，继承 React.Coponent\n        </li>\n\t\t <li>3、createclass 了解，最后一版本 15.5.0 新版里被废弃</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十六、组件中的 API\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、定义:组件中的 Api</li>\n\t\t <li>2、 props:是 react 组件的输入，它们是从父组件向下传递给子组件的数据，并且子组件无法修改，\n    就像父亲遗传给儿子的基因，儿子无法修改的属性。</li>\n\t\t <li>3、 props。children：是一个集合，它储存的是在标签中传入的子元素，概念就像是 vue 中的插槽。\n    在无状态组件中可以直接 props.children 只用，在 props 中加 props.children</li>\n\t\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十七、顶级 API\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、 定义：凡是挂载在全局对象 React 下面的方法或属性都叫顶级 Api</li>\n\t\t <li>2、React.createElement:创建虚拟 dom,接收三个参数：('html 原生标签','属性','内容或者子组件');</li>\n\t\t <li>3、 React.Children:提供了用于处理 this.props.children 不透明数据结构的使用方法，详见\n\n- 默认一般我们使用 map 方法，接收两个参数，(props.children,callback(child,index))\n</li>\n\t\t <li>4、另外还有 toArray(children):将 children 这个复杂的数据结构以数组的方式扁平展开并返回,\n  并为每个子节点分配一个 key</li>\n\t\t <li>5、React.cloneElement:克隆 React 元素 新的元素将取代现有的子元素，而来自原始元素的 key 和 ref 将被保留</li>\n\t\t <li>6、 针对于浅层合并，我们在处理新增属性的时候，要在子元素属性上用深合并\n- 语法:React.cloneElement('element',,text|children)</li>\n        <li>7、React.Frament:React 中的一个常见模式是一个组件返回多个元素。Fragment 允许你将子列表分组，\n   而无需向 DOM 添加额为节点</li>\n\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十八、class Header:派生类\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>\n {/* constructor 构造函数，是我们 class 组件声明周期的初始函数 // { - super*/} //在  中必须是函数调用，并且一定是在构造函数的最顶层使用 // 没写 前报错 - 什么时候使用 super 呢，当前类是作为子类，继承了其他类的时候，必须在 constructor 里用 super 进行实例化，只有这样，才能拥有子类自己的 this 指向\n //指向 header\n  </li>\n\t\t <li>2、 this.props:它是 class 组件的属性，区别于无状态组件多了一个 this,因为 class 组件在被使用的时候会被实例化也就是 new，因此在用它内部的属性或者方法的时候都需要用 this 去点出来。</li>\n\t\t <li>3、构造函数，是我们class组件声明周期的初始函数</li>\n\t\t <li>4、super在constructor中必须是函数调用，并且一定是在构造函数的最顶层使用</li>\n\t\t <li>5、什么时候使用super呢，当前类是作为子类，继承了其他类的时候，必须在constructor里用super进行实例化，只有这样，才能拥有子类自己的this指向</li>\n\t\t <li>\n\t\t\t 6、 this.props:它是class组件的属性，区别于无状态组件多了一个this,因为class组件在被使用的时候会被实例化也就是new，因此在用它内部的属性或者方法的时候都需要用this去点出来。\n\n\t\t </li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十九、jsx\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、在 class 类中表示构造函数 ，在 react 组件中是\n- 渲染函数 ，在生命周期里挂着和更新阶段有它\n</li>\n\t\t <li>2、 jsx 是一种看上去很像 html 标签的语法，但是它的底层还是 js,react 会将 jsx 语法转化为 React.createElement()去执行，所以 jsx 被称做 React.createElement 的语法糖。\n</li>\n\t\t <li>3、在虚拟 dom 中使用 js 的变量或者函数之类都需要放在一个 js 表达式{}，理解为 js 需要执行的环境。</li>\n\t\t <li>4、表达式{}，理解为 js 需要执行的环境。\n- </li>\n\t\t <li>5、 jsx 是：\n\n- 基于 ECMAScript 的一种新特性\n- 一种定义带属性树结构的语法\n  jsx 不是：\n- xml 或者 HTML\n- 一种限制\n</li>\n\t\t<li>6、非 DOM 属性介绍 —— 为什么有非 DOM 属性\n非 DOM 属性： dangerouslySetInnerHTML、ref、key</li>\n\t\t<li>7、dangerouslySetInnerHTML:在 JS 中直接插入 HTML 代码\nref：父组件引用子组件\nkey:提高渲染性能\n</li>\n\t\t<ul>\n\t\t\tjsx 定义\n\t\t\t<li>JSX 第一个 javascript 语法扩展。它类似于模板语言，但它具有 javascript 的全部能力。JSX 最终会被编译成 React.createElement()函数调用，返回称为'React 元素'的普通 javascript 对象，所以 jsx 被称为是 createElement 的语法糖。</li>\n\t\t\t<li>使用驼峰式命名来定义原生属性的名称，而不使用 HTML 属性名称的命名约定。例如，HTML 的 tabindex 属性变成了 jsx 的 tabIndex。而 class 属性则变成为 className，这是因为 class 是 javascript 中的保留字，还是 label 的 for 属性用 htmlFor,因为 for 是保留字，自定义属性必须小写</li>\n\t\t</ul>\n\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十、防止 css 样式全局渲染\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、react 安装 sass：\ncnpm i -D sass-loader</li>\n\t\t <li>2、cnpm i -D node-sass</li>\n\t\t <li>3、使用：index.scss\n前端里 scss 和 less 统称：css 预处理器</li>\n\t\t <li>4、使用 Ang DesignUI 插件 使用安装命令：cnpm install antd --save</li>\n\t\t <li>5、然后在全局的 index.js 文件夹 引入：</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十一、 项目结构\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、分布式项目结构：将模块的样式和脚本全部放在一个文件夹</li>\n\t\t <li>2、集中式项目结构：将所以资源以类型分类放不同的文件夹里</li>\n\t\t <ul>\n\t\t\t21.1 高阶组件\n\t\t <li>3、高阶组件：是参数为组件，返回值为新组件的函数。</li>\n\t\t <li>4、定义：高阶组件(HOC)是 React 中用于复用组件逻辑的一种高级技巧它不是 api,它是一种模式，高阶组件又叫 HOC</li>\n\t\t <li>5、语法：一个函数接受一个组价，并返回一个 class 组件\n  使用：函数调用传入一个组件</li>\n\t\t </ul>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十二、 staState\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、1.配置引用文件路径：在项目一级目录里创建 jsconfig.json 写入：</li>\n\t\t <li>2、使用都时候,可以用绝对路径使用，src 下的路径都可以用绝对路径 3.配置本地开发跨域请求：</li>\n\t\t <li>3、在 package.json 文件里写入：“proxy\"</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十三、在 react 解决跨域问题；\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li> - 4.1 在 package.json 配置\n    - 4.2 在 webpackServer.config 配置\n    - 4.3 使用 jsonp 模块解决跨域\n    - 4.4 使用 node.js 做中间服务层解决跨域</li>\n\t    <ul>\n\t\t\tstate 状态：\n\t\t <li>1、定义：组件自由的状态，用来存数据的，它可以被组件自己修改</li>\n\t\t <li>2、修改 state 使用 this.setState 方法，该方法接受一个对象，setState 会在内部将新的值和 state 旧的值进行合并</li>\n\t\t <li>3、state 一旦被修改就会触发组件更新阶段</li>\n\t\t </ul>\n\t\t <ul>\n\t\t\t props 属性：\n\t\t\t <li>1、定义：父组件传递给子组件的数据就叫属性</li>\n\t\t\t <li>2、props 只能由父组件去修改，子组件是无法修改父级传递进来的属性</li>\n\t\t\t <li>3、props 更新后也会触发子组件的更新阶段</li>\n\t\t </ul>\n\t\t <ul>\n\t\t\t state 和 props 对比：\n\t\t\t <li>1、 相同点：都是存数据|值的，值被修改时都会触发组件更新</li>\n\t\t\t <li>2、不同点：\n2.1：props:父级传递过来的数据，只能由父级修改，子组件不能修改\n2.2：state:是组件自身的状态，自己可以修改。</li>\n\t\t </ul>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十四、生命周期的三个阶段：\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、挂载阶段：constructor【初始挂载】、render【渲染呈现】、componentDidMount【挂载完成】</li>\n\t\t <li>2、、更新阶段：render【渲染】、componentDidUpdate【更新完成】</li>\n\t\t <li>3、卸载阶段：componentWillUnmount【准备卸载】</li>\n\t\t <li>4、速记方法：component【组件】、Did【完成】、Will【准备】\nMount【挂载】、update【更新】、Unmount【卸载】</li>\n\t\t <li>5、触发更新阶段有哪些途径：props 更新、state 修改、forceUpdate</li>\n\t </ul>\n\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十五、控制元素加载与销毁\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、直接控制元素的加载与销毁，相当于 vue 中的 v-if\n</li>\n\t\t <li>2、在 react 中：布尔值，空字符串，null，undefined 统统的渲染成空内容，都相当于空字符串</li>\n\t\t <ul>\n\t\t\t 条件渲染的基础\n\t\t <li>3、三目写法 和 的对比，三目还是 if 的执行逻辑.及只要有一个条件成立，则后面的不再判断\n  缺点：三目的语法不利于阅读，代码过长，还必须有一个没用的 else\n  2. 在代码阅读起来直观，但是，每一行都会进行比较，造成了不必要的</li>\n\t\t <li>4. 在代码阅读起来直观，但是，每一行都会进行比较，造成了不必要的浪费</li>\n\t\t  </ul>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十六、错误边界\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、定义：使用私有的勾子函数，捕获子组件的错误，并且优雅的使用备用 UI 来代替错误提示</li>\n\t\t <li>2、不能捕获的错误有： 1.接口的错误 2.事件里的错误</li>\n\t\t <li>3、使用：在本地开发环境中，还是会有错误提示的，但是打包代码上线后，</li>\n\t\t <li>4、该方法在子组件发生错误的时候会触发属于不常用的生命周期</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十七、默认属性以及属性的验证\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、class 里的 static 关键字，给 class 添加一个私有的属性或方法，该添加的属性或者方法，只能通过 class 类名点出来,而实力化后的对象上则没有这个私有属性或者方法</li>\n\t\t <li>2、两种方式取其中一种即可，如果都存在的活，</li>\n\t\t <li>3、设置默认值 defaultProps:是 class 组件的特有属性，它是用来给组件设置默认属性的，通常情况写是为了防止由于 props 丢失或者空值情况下产生的错误</li>\n\t\t <li>4、当父组件传入了属性，那么优先使用父级传入的属性</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十八、列表 & Key\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、jsx：虚拟 dom，底层是 js，专业名词：虚拟 dom 树，在 js 里表示形式：</li>\n\t\t <li>2、 key: 为的是给 diff 算法进行优化，降低 js 执行次数，优化渲染 key 也必须在数组上下文环境中的兄弟元素上添加，并且每一个 key 都是唯一的【不能重复】</li>\n\t\t <li>3、key:在循环体或者数组环境中，万不得以时使用 index【下标】一般在项目开发中，我们使用 id</li>\n\t\t <li>4、用 key 值的时候先用 item 使用 id</li>\n\t\t <li>5、用 index 不好处：没有优化，消耗性能，因为会重新遍厉数组</li>\n\t\t <li>6、当元素没有确定 id 的时候，万不得已你可以使用元素索引 index 作为 key</li>\n\t\t <li>7、diff 算法:计算虚拟算法:其执行原理是：同级对比，层层匹配， 发现不一致是时直接用新的替换旧的</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十九、ref\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、定义：React 支持一个特殊的、可以附加到任何组件上的 ref 属性，可以直接访问 DOM 元素或组件实例</li>\n\t\t <ul>\n\t\t\t forwardRef 的使用:\n\t\t <li>2、 将父组件中的 ref 对象传递给子组件，用来获取子组件中的 dom 元素</li>\n\t\t <li>3、ref 转发就是转发父组件中的 ref 对象到子组件里，用来获取子组件中的 dom 元素</li>\n\t\t </ul>\n\t\t  <li>5、切记一个原则：如果在自定义组件上使用 ref 属性，那么该子组件必须是由 forwardRef 生成的，否则报错</li>\n\t\t <ul>\n\t\t\t 高阶组件里的转发：\n\t\t <li>6、 谨记一条原则：除了 class 组件上，如果要传递 ref,需要使用自定义属性将 ref 通过 props 传递进去</li>\n\t\t <li>7、除了 class 特别之外，其他的自定义组件上使用 ref 的话，那么该组件必须使用 forwardRef 创建的，forwardRef 就是用来接收传递进来的 ref 对象的 </li>\n\t\t </ul>\n\t </ul>\n</ul>\n)\nconst text2 = (\n\t<ul style={{ paddingLeft: 24 }}>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 一、jsx 语法是什么 \n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>一种语法糖，js+xml 的混写 </li>\n\t\t\n\t</ul>\n\t <p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二、在 jsx 语法中 html 的 class 和 for 属性需要怎么写？为什么需要转化写法？\n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>className    htmlFor    dangerouslysetlnnerHTML    因为jsx语法在浏览器上支持</li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 三、 类数组怎么转化成数组 \n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>Array.from()\n[].slice(2).call(arguments)</li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 四、在 jsx 中 style 需要怎么写 \n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>对象    第一层是js语法  第二层是对象</li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 五、jsx 语法中事件命名有什么特点\n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>驼峰命名  on 后面的开头字母必须是大写的，x必须是驼峰命名法</li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 六、jsx 语法中可以允许多个根元素么？如果不可以，需要怎么处理  \n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>不允许；<></>  </li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 七、判断数据类型有几种方式？有什么优缺点？\n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>Object.prototype.toString.call</li>\n\t\t <li>instanceof</li>\n\t\t <li>typeof</li>\n\t\t <li>constructor</li>\n\t\t <ul>\n\t\t\t 不同类型的优缺点\n\t\t\t <li>1、typeof                                优点： 使用简单     \n         缺点：只能检测出基本类型（出null）</li>\n\t\t <li>2、 instanceof  \n   优点：能检测出引用类型     \n   缺点：不能检测出基本类型，且不能跨iframe </li>\n\t\t <li>3、constructor  \n   优点：基本能检测所有的类型（除了null和undefined）\n    缺点：constructor易被修改，也不能跨iframe</li>\n\t\t <li>4、Object.prototype.toString.call\n   优点：检测出所有的类型\n   缺点：IE6下，undefined和null均为Object</li>\n\t\t </ul>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 八、在 react 中这样一个标签真正表示的是什么？对象还是 html\n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li>1、标签？如果是对象，请写出是如何转化成对象</li>\n\t\t <li>2、对象    reactcreateElement</li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 九、在 dom 元素创建文本节点用的是什么方法\n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li> document.createTextNode</li>\n\t</ul>\n\t<p></p>\n\t<p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十、 jsx 语法中 html 和 js 的写法区别是什么\n\t</p>\n\t<ul style={{fontSize:'17px'}}>\n\t\t <li> 表示html标签 {} 表示js语法</li>\n\t</ul> \n\n\t</ul>\n)\n\nexport default class shuReact extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={{width:'1000px',margin:'auto'}}>\n\t\t\t\t<div style={{width:\"160px\",height:'40px',margin:'auto',fontSize:'22px' ,fontWeight:\"bold\",textAlign:\"center\"}}>React知识库</div>\n\t\t\t\t<p style={{width:'250px',height:'40px',margin:'20px auto',fontSize:'18px' }}>欢迎来到React笔记大全👏......</p>\n\t\t\t<Collapse bordered={false} defaultActiveKey={['1']}>\n\t\t\t\t    \n    \t\t\t\t<Panel style={{fontSize:'20px'}} header=\"React基础知识\" key=\"1\">\n      \t\t\t\t\t\t{text}\n    \t\t\t\t</Panel>\n    \t\t\t\t<Panel style={{fontSize:'20px'}} header=\"React练习题\"  key=\"2\">\n      \t\t\t\t\t\t{text2}\n   \t\t\t\t \t</Panel>\n  \t\t\t</Collapse>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\n\n//antUI库\nimport { Collapse } from 'antd';\nconst { Panel } = Collapse;\n//VUE\nconst text = (\n  <ul style={{ paddingLeft: 24 }}>\n\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>一、package.json的作用(了解)</p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、node_moudules 文件夹 -->放着我们项目的依赖</li>\n\t\t <li>2、dependencies(依赖) devDependencies(开发依赖) 写代码的时候需要用，打包的时候不需要 npm install 其实就是走的依赖</li>\n\t\t <li>3、scripts 脚本 npm run serve</li>\n\t\t <li>4、name 项目名称, version:版本号</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>二、路由懒加载</p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、/* webpackChunkName: \"about\" */ 可以给懒加载模块起名</li>\n\t\t <li>2、import() 表示懒加载，es6的语法 </li>\n\t\t <li>3、路由懒加载的写法(跳转到当前路由才去加载组件)</li>\n\t\t <li>4、路由重定向 使用redirect</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>三、局部组件引入流程</p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、用import 标签导入</li>\n\t\t <li>2、在components里面注册 </li>\n\t\t <li>3、用标签的形式使用</li>\n\t\t <li>4、路由重定向 使用redirect</li>\n\t </ul>\n\t \t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>四、 路由激活样式</p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>router-link-exact-active router-link-active router- link exact 属性 确切严格的匹配</li>\n\t </ul>\n\t  \t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>五、async await 异步的终极解决方案</p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、async 后面必须跟函数 表示函数路面有异步操作</li>\n\t\t <li>2、await 后面通常跟promise(也可以跟普通值) 跟promise 表示promise的执-行结果 </li>\n\t\t <ul style={{fontSize:'17px'}}>\n\t\t\t五.1 组件化的好处\n\t\t\t<li>1、可复用</li>\n\t\t \t<li>2、便于维护 </li>\n\t\t \t<li>3、可组合</li>\t \t\n\t </ul>\n\t </ul>\n\t  \t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 六、axios\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、axios.defaults.baseURL 抽离公共的请求路径</li>\n\t\t <li>2、axios.defaults.baseURL 抽离公共的请求路径</li>\n\t\t <li>3、axios.interceptors.request.use 请求拦截器\n</li>\n\t </ul>\n\t \t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 七、try  catch  异常捕获  不会影响后面代码执行\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>\n\t\t\ttry{\n  \t\t\t\t// 要执行的代码\n\t\t\t}catch(err){\n  \t\t\t// console.log(err) 捕获到的异常\n\t\t\t}\n\t\t\t</li>\n\t </ul>\n\t \t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 八、vue里面styled的属性\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、style 标签加scoped 表示样式只对当前组件生</li>\n\t\t <li>2、lang 表示css使用的预编译语言 scss less stylus</li>\n\t\t<ul style={{fontSize:'17px'}}>\n\t\t八1、Promise.all = > axios.all\n\t\t <li>1、用法：所有的promise成功之后才会走all里面的成功</li>\n\t\t <li>2、好处：多个请求完成之后把数据集合到一起\n\t\t</li>\n\t </ul>\n\t </ul>\n\t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 九、vue取原生dom\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、通过this.$el</li>\n\t\t <li>2、通过refs  （放在原生dom上取的就是dom，放在组件上取的就是组件）</li>\n\t\t <li>3、设置值  ref = '自定义的值'</li>\n\t\t <li>4、取值通过this.$refs.自定义的值</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十、单页面应用原理（hash histroy）\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、hash 改变的方法  hashchange  函数</li>\n\t\t <li>2、histroy  histroy.pushState({},null,'/a')  改变url不刷新页面 改变的方法</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十一、路由跳转\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、router-link tag 属性 把a标签转化成其他标签\n路由跳转的方式 router-link this.$router.push()\n参数为params的跳转方式 1)直接拼接路径 '只能通过path</li>\n\t\t <li>2、直接写params参数 只能通过name\n写parmas跳转的时候路由必须接受参数通过:/\n用/:id 表示不固定但是必须有 多个/:id/:name\nthis.$route.params\n参数为query的跳转方式\n {/* :to=\"{name:'detail',query:{id:item.id}}\" */}\n {/* :to=\"{path:'/detail',query:{id:item.id}}\" */}\nquery取值 this.$router.query\n既可以用name也可以用path\n用query的时候路由不在需要任何处理</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十二、$router 和$route\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、$router 表示路由的实例 方法（push,go）</li>\n\t\t <li>2、$route 表示的路由的信息  属性(params,query)</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十三、在template模板\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>在template里面只允许有一个在外层的元素</li>\n\t\t<ul>\n\t\t\tv-if 和v-show的区别\n\t\t\t <li>v-show display:none 用来频繁切换</li>\n\t\t \t<li>v-if dom操作。隐藏的话dom是没有这个元素的</li>\n\t\t</ul>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十四、插槽 slot \n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、通过slot 可以往组件里面放东西 不写任何东西叫做默认插槽 ��</li>\n\t\t <li>2、命名插槽 slot name=\"ry\" 使用的是需要用template name对应的是template的#ry</li>\n\t </ul>\n\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十五、 防止事件冒泡到上级\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>在事件名后面加 .stop</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t十六、只在vue-cli里面支持下面的写法\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>vue 里面组件名字的写法 驼峰命名的可直接转成中划线写法\n\t\tMobileNav -> mobile-nav</li>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十七、缓存 keep-alive 组件\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、目的:减少请求，做缓存，节约性能</li>\n\t\t <li>2、router-view 路由的视图\n</li>\n\t\t <li>3、路由元信息 meta:{} meta后面的对象可以放自定义属性 routers.js 下面的每个路由对象</li>\n\t\t <li>4、$route.meta.自定义的属性名</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十八、vue流程\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t  项目的目录结构\n\t\t <li>-mock 如果自己写模拟数据创建mock文件夹\n\t\t\t -src\n\t\t\t-view 页面级组件\n\t\t\t-libs 工具类 util.isArray\n\t\t\t-componments 基础组件/公共组件\n\t\t\t-api 放ajax请求index.js\n\t\t</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 十九、 搭建项目的页面 首页 列表 购物车 个人中心 详情页 配置导航路由\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、app.vue 配置router-link 配置导航</li>\n\t\t <li>2、views 里面建页面组件 List.vue Car.vue Profile.vue Detail.vue 3) 配置路由 和 导航 router-link 等于 a标签 a href</li>\n\t </ul>\n\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十、首页\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、抽离导航变成独立组件 components(放基础/公共组件) 新建 Nav.vue 2） 引入本地css assets 文件夹里面 3）轮播图 components建Banner.vue</li>\n\t\t <li>2、props 传值 子组件定义props 接收数据的是子组件 传递数据的是父组件</li>\n\t\t <li>3、使用轮轮播图组件 vue-awesome-swiper\n\t\t\t-npm install vue-awesome-swiper --save\n\t\t\t-main.js</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十一、 axios 的使用流程 src/api/index.js\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、-npm install axios --save\n\t\t\t-index.js api/index.js 导出请求的方法</li>\n\t\t <li>2、哪个组件需要数据就在哪个组件引入</li>\n\t\t <li>3、在引入的组件里面进行调用\n\t\t\t getBanner()  执行才会发送请求 </li>\n\t\t <li>4、请求的写法 和async和await 效果一致</li>\n\t </ul>\n\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十二、vue ui 库vant的使用\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、下载 npm i vant -S</li>\n\t\t <li>2、导入全部组件 main.js</li>\n\t\t <li>3、import Vant from 'vant';\n\t\t\t\timport 'vant/lib/index.css';\n\t\t\t\tVue.use(Vant);\n\t\t</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十三、滚动加载更多\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>页面滚动到底部的条件\nscrollTop +clientHeight  >  scrollHeight  </li>\n\t\t \n\t </ul>\n\t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十四、 loadash的使用\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、npm install loadash \n\t\t\t 2、main.js\n\t\t\t 3、import _ from 'loadash'</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十五、分享功能的实现\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、下载插件 npm install vue-social-share -S</li>\n\t\t <li>2、main.js vue里使用第三方插件�通过Vue.use</li>\n\t\t <li>3、import Share from 'vue-social-share'\nVue.use(Share)</li>\n\t\t <li>4、使用share 组件 在组件中</li>\n\t </ul>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二十六、vue项目打包\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、命令 npm run build</li>\n\t\t <li>2、打包过后的项目只能在服务器访问</li>\n\t\t <li>3、http-server的使用</li>\n\t\t <li>4、npm install http-server -g在文件夹目录允许htt-server</li>\n\t </ul>\n  </ul>\n  </ul>\n);\n//MOCK\nconst text2 = (\n\t<ul style={{ paddingLeft: 24 }}>\n\t\t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 一、nodemon  自动重启\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、node  npm install nodemon -g和src同级建立mock（独立）文件夹(放在其他处也可以) mock(放mock数据) mock里面建app.js(服务器) banner.js（轮播图图片） list.json（商品列表</li>\n\t\t <li>2、express 使用</li>\n\t\t <li>3、npm install express 下载express</li>\n\t\t <li>4、(vue-cli创建项目里面不用下，因为vue-cli是基于webpack的，webpack自带了express)app.js</li>\n\t\t <li>5、创建express 服务器  let  express = require(\"express\")\n  \t\tlet app = express()//会自动创建一个服务器\n  \t\t\tapp.listen(3000) \n\t\t跨域解决方式 cors 跨域 跨域资源共享</li>\n\t\t<li>6、npm install cors 跨域的包\n          const cors = require(\"cors\")\n\t\t  app.use(cors())</li>\n\t </ul>\n\t \t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二、分页接口逻辑\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、20条数据 -> 一次拿五条\n\t\t\t 前端 服务端 服务端 --> 返回数据->前端 \t\t\t\n\t\t\t 前端 --> 请求数据 ->服务端g</li>\n\t\t <li>2、axios.get('http://localhost:3000/banner') axios.get('www.baidu.com/banner')</li>\n\t </ul>\n\t \t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 三、mock 接口 vue.config.js配置数据\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、跟目录下面建立vue.config.js</li>\n\t\t <li>2、vue.config 配置数据 需要改动的时候重新启动 npm run serve</li>\n\t </ul>\n\t</ul>\t\n)\n// NPM\nconst text3 =(\n\t<ul style={{ paddingLeft: 24 }}>\n\t <p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 一、npm命令\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、npm init -y 一键式初始化</li>\n\t\t <li>2、npm install   下载 npm install  jquery@2.0   npm i ->npm install的简写 -g global的缩写 全局</li>\n\t\t <li>3、npm uninstall  卸载\n-https://registry.npmjs.org/</li>\n\t\t <li>4、切换淘宝源:npm set registry https://registry.npm.taobao.org/</li>\n\t\t <li>5、npm cache clear --force  强制除缓存</li>\n\t </ul>\n\t \t<p></p>\n\t <p style={{fontSize:'18px',fontWeight:\"bold\"}}>\n\t\t 二、nrm  管理npm用的（可选项）\n\t </p>\n\t <ul style={{fontSize:'17px'}}>\n\t\t <li>1、下载nrm ： npm install nrm -g</li>\n\t\t <li>2、nrm ls npm 仓库列表</li>\n\t\t <li>3、测试仓库速度 nrm test</li>\n\t\t <li>4、使用那个仓库 nrm use taobao/  等价于  </li>\n\t </ul>\n\t</ul>\n)\nexport default class Index extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div style={{width:'1000px',margin:'auto'}}>\n\t\t\t\t<div style={{width:\"160px\",height:'40px',margin:'auto',fontSize:'22px' ,fontWeight:\"bold\",textAlign:\"center\"}}>vue知识库</div>\n\t\t\t\t<p style={{width:'230px',height:'40px',margin:'20px auto',fontSize:'18px' }}>欢迎来到vue笔记大全👏......</p>\n\t\t\t<Collapse bordered={false} defaultActiveKey={['1']}>\n\t\t\t\t    \n    \t\t\t\t<Panel style={{fontSize:'20px'}} header=\"VUE基础知识\" key=\"1\">\n      \t\t\t\t\t\t{text}\n    \t\t\t\t</Panel>\n    \t\t\t\t<Panel style={{fontSize:'20px'}} header=\"MOCK接口\"  key=\"2\">\n      \t\t\t\t\t\t{text2}\n   \t\t\t\t \t</Panel>\n    \t\t\t\t<Panel style={{fontSize:'20px'}} header=\"NPM 使用\"  key=\"3\">\n      \t\t\t\t\t\t{text3}\n    \t\t\t\t</Panel>\n  \t\t\t</Collapse>\n\t\t\t</div>\n\t\t)\n\t}\n} ","import React, { Component } from 'react'\r\n\r\nexport default class UlPage extends Component {\r\n  render() {\r\n    return <div>UlPage</div>\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class CssPage extends Component {\r\n  render() {\r\n    return <div>cssPage</div>\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TypeScript extends Component {\r\n  render() {\r\n    return <div>TypeScript</div>\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.scss'\r\nimport HomePage from '../homgPage/index'\r\nimport HtmlPage from '../htmlPage/index'\r\nimport JQueryPage from '../jQueryPage/index'\r\nimport JsPage from '../jsPage/index'\r\nimport ReactPage from '../reactPage/index'\r\nimport UlPage from '../uIPage/index'\r\nimport VuePage from '../vuePage/index'\r\nimport CssPage from '../cssPage/index'\r\nimport TypeScript from '../typeScript/index'\r\n// 模板文件\r\nimport { Tabs, Button } from 'antd'\r\nconst { TabPane } = Tabs\r\n\r\nconst operations = <Button disabled>登录</Button>\r\nexport default class index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrap\">\r\n        <header className=\"wrap-header\">\r\n          <h1>知识仓库</h1>\r\n        </header>\r\n        {/*导航部分 */}\r\n        <nav className=\"wrap-nav\">\r\n          <Tabs tabBarExtraContent={operations}>\r\n            {/* <TabPane tab=\"首页\" key=\"1\">\r\n              <TypeScript />\r\n            </TabPane> */}\r\n            {/* <TabPane tab=\"CSS\" key=\"2\">\r\n              <CssPage />\r\n            </TabPane> */}\r\n            <TabPane tab=\"JS\" key=\"3\">\r\n              <JsPage />\r\n            </TabPane>\r\n            <TabPane tab=\"jQuery\" key=\"4\">\r\n              <JQueryPage />\r\n            </TabPane>\r\n            <TabPane tab=\"Vue\" key=\"5\">\r\n              <VuePage />\r\n            </TabPane>\r\n            {/* <TabPane tab=\"Ul\" key=\"6\">\r\n              <UlPage />\r\n            </TabPane> */}\r\n            <TabPane tab=\"React\" key=\"7\">\r\n              <ReactPage />\r\n            </TabPane>\r\n            <TabPane tab=\"HTML\" key=\"8\">\r\n              <HtmlPage />\r\n            </TabPane>\r\n          </Tabs>\r\n        </nav>\r\n        {/* 内容部分 */}\r\n        <main className=\"wrap-main\"></main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Layout from './layout/index' // 引入局部\r\n// 根标签\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './team_project/index'\nimport * as serviceWorker from './serviceWorker'\nimport 'antd/dist/antd.css'\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}